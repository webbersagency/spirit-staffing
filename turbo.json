{
  "$schema": "https://turbo.build/schema.json",
  "globalDependencies": [
    "**/.env.*local"
  ],
  "pipeline": {
    "build": {
      "dependsOn": [
        "^build"
      ],
      "outputs": [
        "dist/**",
        "public/**",
        ".next/**"
      ]
    },
    "web#build": {
      "dependsOn": [
        "^build"
      ],
      "env": [
        "MEDUSA_BACKEND_URL",
        "NEXT_PUBLIC_MEDUSA_BACKEND_URL",
        "NEXT_PUBLIC_STRIPE_KEY",
        "NEXT_PUBLIC_SITE_URL",
        "NEXT_PUBLIC_VERCEL_URL",
        "NEXT_PUBLIC_ENV",
        "MAILGUN_DOMAIN",
        "MAILGUN_API_KEY",
        "MAIL_TO",
        "MAIL_FROM"
      ],
      "outputs": [
        "dist/**"
      ]
    },
    "medusa-server#build": {
      "dependsOn": [
        "^build"
      ],
      "env": [
        "SALES_FORCE_API_URL",
        "SALES_FORCE_DEBUG_EMAIL",
        "FILE_PREFIX",
        "NODE_ENV",
        "DB_USERNAME",
        "DB_PASSWORD",
        "DB_HOST",
        "DB_PORT",
        "DB_DATABASE",
        "DATABASE_URL",
        "REDIS_URL",
        "REDIS_DB_NUMBER",
        "STRIPE_API_KEY",
        "STRIPE_WEBHOOK_SECRET",
        "SPACES_ACCESS_KEY_ID",
        "SPACES_SECRET_ACCESS_KEY",
        "STORE_URL",
        "ADMIN_CORS",
        "STORE_CORS",
        "PORT",
        "HOSTNAME",
        "TIMEZONE",
        "JWT_SECRET",
        "COOKIE_SECRET",
        "PICKER_EMAIL",
        "SMTP_HOST",
        "SMTP_PORT",
        "SMTP_SECURE",
        "SMTP_USER",
        "SMTP_PASS",
        "SENTRY_DSN",
        "PROM_USER_NAME",
        "PROM_USER_PASS",
        "SEGMENT_WRITE_KEY",
        "ADMIN_URL",
        "TZ",
        "SPACES_ACCESS_KEY_ID",
        "SPACES_SECRET_ACCESS_KEY"
      ],
      "outputs": [
        "dist/**"
      ]
    },
    "medusa-admin#build": {
      "dependsOn": [
        "^build"
      ],
      "env": [
        "MEDUSA_*"
      ],
      "outputs": [
        "public/**"
      ]
    },
    "lint": {
      "outputs": []
    },
    "dev": {
      "cache": false
    },
    "dev:admin": {
      "cache": false
    },
    "docker:up": {
      "cache": false
    },
    "start": {
      "cache": false
    },
    "start:admin": {
      "cache": false
    },
    "storybook": {
      "cache": false
    }
  }
}
